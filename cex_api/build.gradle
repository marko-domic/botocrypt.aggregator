plugins {
    id 'org.openapi.generator'
    id 'java-library'
    id 'de.undercouch.download'
}

dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: spring_boot_version
    implementation group: 'org.springframework', name: 'spring-context', version: spring_version
    implementation group: 'org.springframework', name: 'spring-web', version: spring_version
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.2'
    implementation group: 'org.openapitools', name: 'jackson-databind-nullable', version: '0.2.1'
    implementation group: 'io.swagger', name: 'swagger-annotations', version: '1.6.2'
    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'

}

def separator = File.separator
def basePackage = 'com.botocrypt.exchange.cex.io'
def sourceOutputDir = project.projectDir

task downloadFile(type: Download) {
    src "${cex_io_api_spec_url}/${cex_io_api_spec_version}/${cex_io_api_spec_file_name}"
    dest buildDir
    onlyIfModified true
}

openApiGenerate {
    inputSpec = "${buildDir}${separator}dist.yaml"
    generatorName = 'java'
    library = 'webclient'
    apiPackage = "${basePackage}.api"
    modelPackage = "${basePackage}.dto"
    invokerPackage = "${basePackage}.invoker"
    outputDir = "${sourceOutputDir}"
    configOptions = [dateLibrary: 'java8']
    generateApiTests = false
    generateModelTests = false
    generateModelDocumentation = false
    generateApiDocumentation = false
    additionalProperties = [
            'interfaceOnly'       : 'true',
            'skipDefaultInterface': 'true',
            'useBeanValidation'   : 'true',
            'useTags'             : 'true',
            'modelNameSuffix'     : 'Dto',
            'generateApiTests'    : 'false',
            'generateModelTests'  : 'false'
    ]
}

tasks.clean {
    delete "${sourceOutputDir}${separator}.openapi-generator"
    delete "${sourceOutputDir}${separator}api"
    delete "${sourceOutputDir}${separator}gradle"
    delete "${sourceOutputDir}${separator}src"
}

tasks.openApiGenerate.dependsOn tasks.downloadFile
project.tasks.compileJava.dependsOn tasks.openApiGenerate

compileJava.options.encoding = 'UTF-8'
